"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var e_1, _a;
var revert_error_1 = require("../../revert_error");
// tslint:disable:max-classes-per-file
var BatchMatchOrdersErrorCodes;
(function (BatchMatchOrdersErrorCodes) {
    BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes["ZeroLeftOrders"] = 0] = "ZeroLeftOrders";
    BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes["ZeroRightOrders"] = 1] = "ZeroRightOrders";
    BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes["InvalidLengthLeftSignatures"] = 2] = "InvalidLengthLeftSignatures";
    BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes["InvalidLengthRightSignatures"] = 3] = "InvalidLengthRightSignatures";
})(BatchMatchOrdersErrorCodes = exports.BatchMatchOrdersErrorCodes || (exports.BatchMatchOrdersErrorCodes = {}));
var ExchangeContextErrorCodes;
(function (ExchangeContextErrorCodes) {
    ExchangeContextErrorCodes[ExchangeContextErrorCodes["InvalidMaker"] = 0] = "InvalidMaker";
    ExchangeContextErrorCodes[ExchangeContextErrorCodes["InvalidTaker"] = 1] = "InvalidTaker";
    ExchangeContextErrorCodes[ExchangeContextErrorCodes["InvalidSender"] = 2] = "InvalidSender";
})(ExchangeContextErrorCodes = exports.ExchangeContextErrorCodes || (exports.ExchangeContextErrorCodes = {}));
var FillErrorCode;
(function (FillErrorCode) {
    FillErrorCode[FillErrorCode["InvalidTakerAmount"] = 0] = "InvalidTakerAmount";
    FillErrorCode[FillErrorCode["TakerOverpay"] = 1] = "TakerOverpay";
    FillErrorCode[FillErrorCode["Overfill"] = 2] = "Overfill";
    FillErrorCode[FillErrorCode["InvalidFillPrice"] = 3] = "InvalidFillPrice";
})(FillErrorCode = exports.FillErrorCode || (exports.FillErrorCode = {}));
var SignatureErrorCode;
(function (SignatureErrorCode) {
    SignatureErrorCode[SignatureErrorCode["BadOrderSignature"] = 0] = "BadOrderSignature";
    SignatureErrorCode[SignatureErrorCode["BadTransactionSignature"] = 1] = "BadTransactionSignature";
    SignatureErrorCode[SignatureErrorCode["InvalidLength"] = 2] = "InvalidLength";
    SignatureErrorCode[SignatureErrorCode["Unsupported"] = 3] = "Unsupported";
    SignatureErrorCode[SignatureErrorCode["Illegal"] = 4] = "Illegal";
    SignatureErrorCode[SignatureErrorCode["InappropriateSignatureType"] = 5] = "InappropriateSignatureType";
    SignatureErrorCode[SignatureErrorCode["InvalidSigner"] = 6] = "InvalidSigner";
})(SignatureErrorCode = exports.SignatureErrorCode || (exports.SignatureErrorCode = {}));
var AssetProxyDispatchErrorCode;
(function (AssetProxyDispatchErrorCode) {
    AssetProxyDispatchErrorCode[AssetProxyDispatchErrorCode["InvalidAssetDataLength"] = 0] = "InvalidAssetDataLength";
    AssetProxyDispatchErrorCode[AssetProxyDispatchErrorCode["UnknownAssetProxy"] = 1] = "UnknownAssetProxy";
})(AssetProxyDispatchErrorCode = exports.AssetProxyDispatchErrorCode || (exports.AssetProxyDispatchErrorCode = {}));
var TransactionErrorCode;
(function (TransactionErrorCode) {
    TransactionErrorCode[TransactionErrorCode["AlreadyExecuted"] = 0] = "AlreadyExecuted";
    TransactionErrorCode[TransactionErrorCode["Expired"] = 1] = "Expired";
})(TransactionErrorCode = exports.TransactionErrorCode || (exports.TransactionErrorCode = {}));
var IncompleteFillErrorCode;
(function (IncompleteFillErrorCode) {
    IncompleteFillErrorCode[IncompleteFillErrorCode["IncompleteMarketBuyOrders"] = 0] = "IncompleteMarketBuyOrders";
    IncompleteFillErrorCode[IncompleteFillErrorCode["IncompleteMarketSellOrders"] = 1] = "IncompleteMarketSellOrders";
    IncompleteFillErrorCode[IncompleteFillErrorCode["IncompleteFillOrder"] = 2] = "IncompleteFillOrder";
})(IncompleteFillErrorCode = exports.IncompleteFillErrorCode || (exports.IncompleteFillErrorCode = {}));
var BatchMatchOrdersError = /** @class */ (function (_super) {
    __extends(BatchMatchOrdersError, _super);
    function BatchMatchOrdersError(error) {
        return _super.call(this, 'BatchMatchOrdersError', 'BatchMatchOrdersError(uint8 error)', { error: error }) || this;
    }
    return BatchMatchOrdersError;
}(revert_error_1.RevertError));
exports.BatchMatchOrdersError = BatchMatchOrdersError;
var SignatureError = /** @class */ (function (_super) {
    __extends(SignatureError, _super);
    function SignatureError(error, hash, signer, signature) {
        return _super.call(this, 'SignatureError', 'SignatureError(uint8 error, bytes32 hash, address signer, bytes signature)', {
            error: error,
            hash: hash,
            signer: signer,
            signature: signature,
        }) || this;
    }
    return SignatureError;
}(revert_error_1.RevertError));
exports.SignatureError = SignatureError;
var SignatureValidatorNotApprovedError = /** @class */ (function (_super) {
    __extends(SignatureValidatorNotApprovedError, _super);
    function SignatureValidatorNotApprovedError(signer, validator) {
        return _super.call(this, 'SignatureValidatorNotApprovedError', 'SignatureValidatorNotApprovedError(address signer, address validator)', {
            signer: signer,
            validator: validator,
        }) || this;
    }
    return SignatureValidatorNotApprovedError;
}(revert_error_1.RevertError));
exports.SignatureValidatorNotApprovedError = SignatureValidatorNotApprovedError;
var SignatureWalletError = /** @class */ (function (_super) {
    __extends(SignatureWalletError, _super);
    function SignatureWalletError(hash, wallet, signature, errorData) {
        return _super.call(this, 'SignatureWalletError', 'SignatureWalletError(bytes32 hash, address wallet, bytes signature, bytes errorData)', {
            hash: hash,
            wallet: wallet,
            signature: signature,
            errorData: errorData,
        }) || this;
    }
    return SignatureWalletError;
}(revert_error_1.RevertError));
exports.SignatureWalletError = SignatureWalletError;
var EIP1271SignatureError = /** @class */ (function (_super) {
    __extends(EIP1271SignatureError, _super);
    function EIP1271SignatureError(verifyingContract, data, signature, errorData) {
        return _super.call(this, 'EIP1271SignatureError', 'EIP1271SignatureError(address verifyingContract, bytes data, bytes signature, bytes errorData)', {
            verifyingContract: verifyingContract,
            data: data,
            signature: signature,
            errorData: errorData,
        }) || this;
    }
    return EIP1271SignatureError;
}(revert_error_1.RevertError));
exports.EIP1271SignatureError = EIP1271SignatureError;
var OrderStatusError = /** @class */ (function (_super) {
    __extends(OrderStatusError, _super);
    function OrderStatusError(orderHash, status) {
        return _super.call(this, 'OrderStatusError', 'OrderStatusError(bytes32 orderHash, uint8 status)', { orderHash: orderHash, status: status }) || this;
    }
    return OrderStatusError;
}(revert_error_1.RevertError));
exports.OrderStatusError = OrderStatusError;
var FillError = /** @class */ (function (_super) {
    __extends(FillError, _super);
    function FillError(error, orderHash) {
        return _super.call(this, 'FillError', 'FillError(uint8 error, bytes32 orderHash)', { error: error, orderHash: orderHash }) || this;
    }
    return FillError;
}(revert_error_1.RevertError));
exports.FillError = FillError;
var OrderEpochError = /** @class */ (function (_super) {
    __extends(OrderEpochError, _super);
    function OrderEpochError(maker, sender, currentEpoch) {
        return _super.call(this, 'OrderEpochError', 'OrderEpochError(address maker, address sender, uint256 currentEpoch)', {
            maker: maker,
            sender: sender,
            currentEpoch: currentEpoch,
        }) || this;
    }
    return OrderEpochError;
}(revert_error_1.RevertError));
exports.OrderEpochError = OrderEpochError;
var AssetProxyExistsError = /** @class */ (function (_super) {
    __extends(AssetProxyExistsError, _super);
    function AssetProxyExistsError(assetProxyId, assetProxy) {
        return _super.call(this, 'AssetProxyExistsError', 'AssetProxyExistsError(bytes4 assetProxyId, address assetProxy)', {
            assetProxyId: assetProxyId,
            assetProxy: assetProxy,
        }) || this;
    }
    return AssetProxyExistsError;
}(revert_error_1.RevertError));
exports.AssetProxyExistsError = AssetProxyExistsError;
var AssetProxyDispatchError = /** @class */ (function (_super) {
    __extends(AssetProxyDispatchError, _super);
    function AssetProxyDispatchError(error, orderHash, assetData) {
        return _super.call(this, 'AssetProxyDispatchError', 'AssetProxyDispatchError(uint8 error, bytes32 orderHash, bytes assetData)', {
            error: error,
            orderHash: orderHash,
            assetData: assetData,
        }) || this;
    }
    return AssetProxyDispatchError;
}(revert_error_1.RevertError));
exports.AssetProxyDispatchError = AssetProxyDispatchError;
var AssetProxyTransferError = /** @class */ (function (_super) {
    __extends(AssetProxyTransferError, _super);
    function AssetProxyTransferError(orderHash, assetData, errorData) {
        return _super.call(this, 'AssetProxyTransferError', 'AssetProxyTransferError(bytes32 orderHash, bytes assetData, bytes errorData)', {
            orderHash: orderHash,
            assetData: assetData,
            errorData: errorData,
        }) || this;
    }
    return AssetProxyTransferError;
}(revert_error_1.RevertError));
exports.AssetProxyTransferError = AssetProxyTransferError;
var NegativeSpreadError = /** @class */ (function (_super) {
    __extends(NegativeSpreadError, _super);
    function NegativeSpreadError(leftOrderHash, rightOrderHash) {
        return _super.call(this, 'NegativeSpreadError', 'NegativeSpreadError(bytes32 leftOrderHash, bytes32 rightOrderHash)', {
            leftOrderHash: leftOrderHash,
            rightOrderHash: rightOrderHash,
        }) || this;
    }
    return NegativeSpreadError;
}(revert_error_1.RevertError));
exports.NegativeSpreadError = NegativeSpreadError;
var TransactionError = /** @class */ (function (_super) {
    __extends(TransactionError, _super);
    function TransactionError(error, transactionHash) {
        return _super.call(this, 'TransactionError', 'TransactionError(uint8 error, bytes32 transactionHash)', { error: error, transactionHash: transactionHash }) || this;
    }
    return TransactionError;
}(revert_error_1.RevertError));
exports.TransactionError = TransactionError;
var TransactionExecutionError = /** @class */ (function (_super) {
    __extends(TransactionExecutionError, _super);
    function TransactionExecutionError(transactionHash, errorData) {
        return _super.call(this, 'TransactionExecutionError', 'TransactionExecutionError(bytes32 transactionHash, bytes errorData)', {
            transactionHash: transactionHash,
            errorData: errorData,
        }) || this;
    }
    return TransactionExecutionError;
}(revert_error_1.RevertError));
exports.TransactionExecutionError = TransactionExecutionError;
var TransactionGasPriceError = /** @class */ (function (_super) {
    __extends(TransactionGasPriceError, _super);
    function TransactionGasPriceError(transactionHash, actualGasPrice, requiredGasPrice) {
        return _super.call(this, 'TransactionGasPriceError', 'TransactionGasPriceError(bytes32 transactionHash, uint256 actualGasPrice, uint256 requiredGasPrice)', {
            transactionHash: transactionHash,
            actualGasPrice: actualGasPrice,
            requiredGasPrice: requiredGasPrice,
        }) || this;
    }
    return TransactionGasPriceError;
}(revert_error_1.RevertError));
exports.TransactionGasPriceError = TransactionGasPriceError;
var TransactionInvalidContextError = /** @class */ (function (_super) {
    __extends(TransactionInvalidContextError, _super);
    function TransactionInvalidContextError(transactionHash, currentContextAddress) {
        return _super.call(this, 'TransactionInvalidContextError', 'TransactionInvalidContextError(bytes32 transactionHash, address currentContextAddress)', {
            transactionHash: transactionHash,
            currentContextAddress: currentContextAddress,
        }) || this;
    }
    return TransactionInvalidContextError;
}(revert_error_1.RevertError));
exports.TransactionInvalidContextError = TransactionInvalidContextError;
var IncompleteFillError = /** @class */ (function (_super) {
    __extends(IncompleteFillError, _super);
    function IncompleteFillError(error, expectedAssetFillAmount, actualAssetFillAmount) {
        return _super.call(this, 'IncompleteFillError', 'IncompleteFillError(uint8 error, uint256 expectedAssetFillAmount, uint256 actualAssetFillAmount)', {
            error: error,
            expectedAssetFillAmount: expectedAssetFillAmount,
            actualAssetFillAmount: actualAssetFillAmount,
        }) || this;
    }
    return IncompleteFillError;
}(revert_error_1.RevertError));
exports.IncompleteFillError = IncompleteFillError;
var ExchangeInvalidContextError = /** @class */ (function (_super) {
    __extends(ExchangeInvalidContextError, _super);
    function ExchangeInvalidContextError(error, orderHash, contextAddress) {
        return _super.call(this, 'ExchangeInvalidContextError', 'ExchangeInvalidContextError(uint8 error, bytes32 orderHash, address contextAddress)', { error: error, orderHash: orderHash, contextAddress: contextAddress }) || this;
    }
    return ExchangeInvalidContextError;
}(revert_error_1.RevertError));
exports.ExchangeInvalidContextError = ExchangeInvalidContextError;
var PayProtocolFeeError = /** @class */ (function (_super) {
    __extends(PayProtocolFeeError, _super);
    function PayProtocolFeeError(orderHash, protocolFee, makerAddress, takerAddress, errorData) {
        return _super.call(this, 'PayProtocolFeeError', 'PayProtocolFeeError(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress, bytes errorData)', { orderHash: orderHash, protocolFee: protocolFee, makerAddress: makerAddress, takerAddress: takerAddress, errorData: errorData }) || this;
    }
    return PayProtocolFeeError;
}(revert_error_1.RevertError));
exports.PayProtocolFeeError = PayProtocolFeeError;
var types = [
    AssetProxyExistsError,
    AssetProxyDispatchError,
    AssetProxyTransferError,
    BatchMatchOrdersError,
    EIP1271SignatureError,
    ExchangeInvalidContextError,
    FillError,
    IncompleteFillError,
    NegativeSpreadError,
    OrderEpochError,
    OrderStatusError,
    PayProtocolFeeError,
    SignatureError,
    SignatureValidatorNotApprovedError,
    SignatureWalletError,
    TransactionError,
    TransactionExecutionError,
    TransactionGasPriceError,
    TransactionInvalidContextError,
];
try {
    // Register the types we've defined.
    for (var types_1 = __values(types), types_1_1 = types_1.next(); !types_1_1.done; types_1_1 = types_1.next()) {
        var type = types_1_1.value;
        revert_error_1.RevertError.registerType(type);
    }
}
catch (e_1_1) { e_1 = { error: e_1_1 }; }
finally {
    try {
        if (types_1_1 && !types_1_1.done && (_a = types_1.return)) _a.call(types_1);
    }
    finally { if (e_1) throw e_1.error; }
}
//# sourceMappingURL=revert_errors.js.map